from aiogram import Router, F
from aiogram.types import Message
from config import ADMIN_ID
from database import get_user_by_name, set_user_time, deactivate_user, get_all_users, get_active_users

router = Router()

@router.message(F.text.startswith("/set_time"))
async def set_time(msg: Message):
    if msg.from_user.id != ADMIN_ID:
        return await msg.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω.")
    parts = msg.text.split()

    if len(parts) == 2:
        try:
            users = await get_active_users()
            print(f'–í–≤–µ–¥–µ–Ω–æ —á–∞—Å–æ–≤: {parts[1]}')
            print(((float(parts[1])*60)-90-10-10))
            print(users)
            minutes = ((float(parts[1])*60)-90-10-10)/len(users)
            if not users:
                return await msg.answer("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            
            for user in users:
                await set_user_time(user[0], minutes*60)
            return await msg.answer("–í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

        except ValueError:
            return await msg.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç.")
        
    elif len(parts) == 3:
        name, minutes = parts[1], parts[2]
        try:
            minutes = int(minutes)
            user = await get_user_by_name(name)
            if not user:
                return await msg.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–µ–π–¥–µ–Ω.")
            await set_user_time(user[0], minutes*60)
            return await msg.answer("–í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        except ValueError:
            return await msg.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç.")
    else:
        return await msg.answer("–§–æ—Ä–º–∞—Ç: /set_time [–∏–º—è] [–º–∏–Ω—É—Ç—ã] –∏–ª–∏ /set_time [—á–∞—Å—ã] ")

@router.message(F.text.startswith("/remove"))
async def remove_user(msg: Message):
    if msg.from_user.id != ADMIN_ID:
        return await msg.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω.")
    parts = msg.text.split()
    if len(parts) != 2:
        return await msg.answer("–§–æ—Ä–º–∞—Ç: /remove [–∏–º—è]")
    name = parts[1]
    user = await get_user_by_name(name)
    if not user:
        return await msg.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    await deactivate_user(user[0])
    await msg.answer(f"üö´ {name} —É–¥–∞–ª—ë–Ω –∏–∑ —Ä–∞—É–Ω–¥–∞.")
