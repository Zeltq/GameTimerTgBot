from aiogram import Router, F
from aiogram.types import Message
from config import ADMIN_ID
from database import get_user_by_name, set_user_time, deactivate_user

router = Router()

@router.message(F.text.startswith("/set_time"))
async def set_time(msg: Message):
    if msg.from_user.id != ADMIN_ID:
        return await msg.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω.")
    parts = msg.text.split()
    if len(parts) != 3:
        return await msg.answer("–§–æ—Ä–º–∞—Ç: /set_time [–∏–º—è] [–º–∏–Ω—É—Ç—ã]")
    name, minutes = parts[1], int(parts[2])
    user = await get_user_by_name(name)
    if not user:
        return await msg.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    await set_user_time(user[0], minutes * 60)
    await msg.answer(f"‚úÖ –í—Ä–µ–º—è –¥–ª—è {name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {minutes} –º–∏–Ω.")

@router.message(F.text.startswith("/remove"))
async def remove_user(msg: Message):
    if msg.from_user.id != ADMIN_ID:
        return await msg.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω.")
    parts = msg.text.split()
    if len(parts) != 2:
        return await msg.answer("–§–æ—Ä–º–∞—Ç: /remove [–∏–º—è]")
    name = parts[1]
    user = await get_user_by_name(name)
    if not user:
        return await msg.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    await deactivate_user(user[0])
    await msg.answer(f"üö´ {name} —É–¥–∞–ª—ë–Ω –∏–∑ —Ä–∞—É–Ω–¥–∞.")
